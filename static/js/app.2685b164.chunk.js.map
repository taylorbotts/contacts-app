{"version":3,"sources":["constants/Colors.js","components/TabBarIcon.js","screens/HomeScreen.js","screens/Profile.js","screens/AddContact.js","navigation/BottomTabNavigator.js","App.js","navigation/useLinking.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","HEADERS","HomeScreen","state","contacts","currentScreen","newContactName","newContactNum","focusListener","navigation","addListener","componentDidMount","fetch","then","response","json","result","setState","newHeaders","method","body","JSON","stringify","this","number","p","delHeaders","position","error","currentContacts","filter","v","i","styles","container","contentContainerStyle","contentContainer","map","contact","key","title","View","display","flexDirection","Text","fontSize","flexGrow","cursor","onPress","removeContact","React","navigationOptions","header","StyleSheet","create","flex","backgroundColor","Profile","userName","numContacts","headers","API","Accept","res","count","textAlign","paddingTop","AddContact","submitDisabled","contactName","contactNumber","text","length","navigate","margin","placholder","onChangeText","handleNameInput","handleNumInput","add","disabled","buttonStyle","BottomTab","createBottomTabNavigator","BottomTabNavigator","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","tabBarIcon","routes","index","Stack","createStackNavigator","App","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","getInitialState","useLinking","prefixes","Linking","makeUrl","config","Root","path","screens","Home","a","async","SplashScreen","preventAutoHide","Font","font","require","console","warn","hide","skipLoadingScreen","Platform","OS","StatusBar","barStyle","NavigationContainer","ref","initialState","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","module","exports"],"mappings":"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","file":"static/js/app.2685b164.chunk.js","sourcesContent":["const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import * as WebBrowser from 'expo-web-browser'\nimport * as React from 'react'\nimport { Button, StyleSheet, Text, View } from 'react-native'\nimport { Card, Icon } from 'react-native-elements'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst CONTACT_SCREEN = 0\nconst ADD_CONTACT_SCREEN = 1\nconst HEADERS = {\n  'method': 'GET',\n  'headers': {\n    'API': 'botts',\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n}\n\nexport default class HomeScreen extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      contacts: [],\n      currentScreen: CONTACT_SCREEN,\n      newContactName: '',\n      newContactNum: ''\n    }\n    this.focusListener = props.navigation.addListener('focus', () => this.componentDidMount())\n  }\n\n  componentDidMount () {\n    //const { contact } = this.props.route.params\n    fetch('https://plato.mrl.ai:8081/contacts', HEADERS)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          contacts: result.contacts\n        })\n      })\n  }\n\n  addContact () {\n    const newHeaders = {\n      ...HEADERS,\n      method: 'POST',\n      body: JSON.stringify({ name: this.state.newContactName, number: this.state.newContactNum })\n    }\n    fetch('https://plato.mrl.ai:8081/contacts/add', newHeaders)\n      .then(response => response.json())\n      .then(() => this.setState({ currentScreen: CONTACT_SCREEN, newContactName: '', newContactNum: '' }))\n    this.componentDidMount()\n  }\n\n  removeContact (p) {\n    const delHeaders = {\n      ...HEADERS,\n      method: 'POST',\n      body: JSON.stringify({ position: p })\n    }\n    fetch('https://plato.mrl.ai:8081/contacts/remove', delHeaders)\n      .then(response => response.json())\n      .then((body) => {\n        if (!body.error) {\n          const currentContacts = this.state.contacts.filter((v, i) =>\n            (i !== p))\n          this.setState({ contacts: currentContacts })\n        }\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n          {this.state.contacts.map((contact, i) =>\n            <Card key={i}\n              title={\n                <View style={{ display: 'flex', flexDirection: 'row', marginBottom: 10 }}>\n                  <Text style={{ fontSize: 20 }}>{contact.name}</Text>\n                  <View style={{ flexGrow: 1 }} />\n                  <Text style={{ color: 'red', fontSize: 20, cursor: 'pointer' }} onPress={() => this.removeContact(i)}>&times;</Text>\n                </View>\n              }>\n              <Text>{contact.number}</Text>\n            </Card>\n          )}\n        </ScrollView>\n      </>\n    )\n  }\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  }\n})\n","import { Ionicons } from '@expo/vector-icons'\nimport * as WebBrowser from 'expo-web-browser'\nimport * as React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { Card } from 'react-native-elements'\n\nexport default class Profile extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userName: '',\n      numContacts: ''\n    }\n  }\n\n  componentDidMount () {\n    fetch('https://plato.mrl.ai:8081/profile', {\n      method: 'GET',\n      headers: {\n        API: 'botts',\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    })\n      .then(res => res.json())\n      .then(body => {\n        this.setState({ userName: body.name, numContacts: body.count })\n      })\n  }\n\n  render () {\n    return (\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        {\n          (this.state.userName !== '')\n            ? <Card title={this.state.userName}>\n              <Text style={{ textAlign: 'center' }}>Number of Contacts: {this.state.numContacts}</Text>\n            </Card>\n            : null\n        }\n      </ScrollView>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  },\n  contentContainer: {\n    paddingTop: 15\n  }\n})\n","import * as React from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { Input, Button } from 'react-native-elements'\n\nexport default class AddContact extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      submitDisabled: true,\n      contactName: '',\n      contactNumber: ''\n    }\n    this.focusListener = props.navigation.addListener('focus', () => this.setState({ contactName: '', contactNumber: '' }))\n  }\n\n  handleNameInput (text) {\n    if (text.length > 0) {\n      this.setState({ contactName: text })\n    } else {\n      this.setState({ submitDisabled: true })\n    }\n  }\n\n  handleNumInput (text) {\n    if (this.state.contactName.length > 0 && text.length > 0) {\n      this.setState({\n        submitDisabled: false,\n        contactNumber: text\n      })\n    } else {\n      this.setState({ submitDisabled: true })\n    }\n  }\n\n  add () {\n    fetch('https://plato.mrl.ai:8081/contacts/add', {\n      method: 'POST',\n      headers: {\n        API: 'botts',\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({ name: this.state.contactName, number: this.state.contactNumber })\n    })\n      .then(res => res.json())\n      .then(body => {\n        if (!body.error) {\n          this.setState({ contactName: '', contactNumber: '' })\n          this.props.navigation.navigate('home')\n        }\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n          <Text style={{ margin: 10 }}>Name</Text>\n          <Input\n            placholder=\"Name\"\n            onChangeText={text => this.handleNameInput(text)}\n          />\n          <Text style={{ margin: 10 }}>Number</Text>\n          <Input\n            placholder='Number'\n            onChangeText={text => this.handleNumInput(text)}\n          />\n        </ScrollView>\n        <Button title='Add Contact' onPress={() => this.add()} disabled={this.state.submitDisabled} />\n        <Button title='Back' buttonStyle={{ backgroundColor: '#ff483b' }} onPress={() => this.props.navigation.navigate(\"home\")} />\n      </>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff'\n  }\n})","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport * as React from 'react'\n\nimport TabBarIcon from '../components/TabBarIcon'\nimport HomeScreen from '../screens/HomeScreen'\nimport Profile from '../screens/Profile'\nimport AddContact from '../screens/AddContact'\n\nconst BottomTab = createBottomTabNavigator()\nconst INITIAL_ROUTE_NAME = 'Home'\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) })\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"home\"\n        component={HomeScreen}\n        options={{\n          title: 'Contacts',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"ios-contacts\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"add\"\n        component={AddContact}\n        options={{\n          title: 'Add Contact',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-add\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"profile\"\n        component={Profile}\n        options={{\n          title: 'Profile',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-person\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  )\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME\n\n  switch (routeName) {\n    case 'home':\n      return 'Contacts'\n    case 'profile':\n      return 'Profile'\n    case 'add':\n      return 'Add New Contact'\n  }\n}\n","import * as React from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { SplashScreen } from 'expo';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport useLinking from './navigation/useLinking';\n\nconst Stack = createStackNavigator();\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(containerRef);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState());\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <NavigationContainer ref={containerRef} initialState={initialNavigationState}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","import { useLinking } from '@react-navigation/native';\nimport { Linking } from 'expo';\n\nexport default function(containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl('/')],\n    config: {\n      Root: {\n        path: 'Root',\n        screens: {\n          Home: 'contacts',\n          AddContact: 'add',\n          Profile: 'profile'\n        },\n      },\n    },\n  });\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/contacts-app/expo-service-worker.js', { scope: '/contacts-app/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}